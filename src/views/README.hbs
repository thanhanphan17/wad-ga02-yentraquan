<!DOCTYPE html><html><head>
      <title>README</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      
      <link rel="stylesheet" href="file:////home/thanhanphan17/.vscode/extensions/shd101wyy.markdown-preview-enhanced-0.8.10/crossnote/dependencies/katex/katex.min.css">
      
      
      
      
      
      <style>
      code[class*=language-],pre[class*=language-]{color:#333;background:0 0;font-family:Consolas,"Liberation Mono",Menlo,Courier,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.4;-moz-tab-size:8;-o-tab-size:8;tab-size:8;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:.8em;overflow:auto;border-radius:3px;background:#f5f5f5}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal;background:#f5f5f5}.token.blockquote,.token.comment{color:#969896}.token.cdata{color:#183691}.token.doctype,.token.macro.property,.token.punctuation,.token.variable{color:#333}.token.builtin,.token.important,.token.keyword,.token.operator,.token.rule{color:#a71d5d}.token.attr-value,.token.regex,.token.string,.token.url{color:#183691}.token.atrule,.token.boolean,.token.code,.token.command,.token.constant,.token.entity,.token.number,.token.property,.token.symbol{color:#0086b3}.token.prolog,.token.selector,.token.tag{color:#63a35c}.token.attr-name,.token.class,.token.class-name,.token.function,.token.id,.token.namespace,.token.pseudo-class,.token.pseudo-element,.token.url-reference .token.variable{color:#795da3}.token.entity{cursor:help}.token.title,.token.title .token.punctuation{font-weight:700;color:#1d3e81}.token.list{color:#ed6a43}.token.inserted{background-color:#eaffea;color:#55a532}.token.deleted{background-color:#ffecec;color:#bd2c00}.token.bold{font-weight:700}.token.italic{font-style:italic}.language-json .token.property{color:#183691}.language-markup .token.tag .token.punctuation{color:#333}.language-css .token.function,code.language-css{color:#0086b3}.language-yaml .token.atrule{color:#63a35c}code.language-yaml{color:#183691}.language-ruby .token.function{color:#333}.language-markdown .token.url{color:#795da3}.language-makefile .token.symbol{color:#795da3}.language-makefile .token.variable{color:#183691}.language-makefile .token.builtin{color:#0086b3}.language-bash .token.keyword{color:#0086b3}pre[data-line]{position:relative;padding:1em 0 1em 3em}pre[data-line] .line-highlight-wrapper{position:absolute;top:0;left:0;background-color:transparent;display:block;width:100%}pre[data-line] .line-highlight{position:absolute;left:0;right:0;padding:inherit 0;margin-top:1em;background:hsla(24,20%,50%,.08);background:linear-gradient(to right,hsla(24,20%,50%,.1) 70%,hsla(24,20%,50%,0));pointer-events:none;line-height:inherit;white-space:pre}pre[data-line] .line-highlight:before,pre[data-line] .line-highlight[data-end]:after{content:attr(data-start);position:absolute;top:.4em;left:.6em;min-width:1em;padding:0 .5em;background-color:hsla(24,20%,50%,.4);color:#f4f1ef;font:bold 65%/1.5 sans-serif;text-align:center;vertical-align:.3em;border-radius:999px;text-shadow:none;box-shadow:0 1px #fff}pre[data-line] .line-highlight[data-end]:after{content:attr(data-end);top:auto;bottom:.4em}html body{font-family:'Helvetica Neue',Helvetica,'Segoe UI',Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ol,html body>ul{margin-bottom:16px}html body ol,html body ul{padding-left:2em}html body ol.no-list,html body ul.no-list{padding:0;list-style-type:none}html body ol ol,html body ol ul,html body ul ol,html body ul ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;background-color:#f0f0f0;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:700;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:700}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::after,html body code::before{letter-spacing:-.2em;content:'\00a0'}html body pre>code{padding:0;margin:0;word-break:normal;white-space:pre;background:0 0;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:after,html body pre code:before,html body pre tt:after,html body pre tt:before{content:normal}html body blockquote,html body dl,html body ol,html body p,html body pre,html body ul{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body code,html body pre{word-wrap:break-word;white-space:pre}}.markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview ul{list-style:disc}.markdown-preview ul ul{list-style:circle}.markdown-preview ul ul ul{list-style:square}.markdown-preview ol{list-style:decimal}.markdown-preview ol ol,.markdown-preview ul ol{list-style-type:lower-roman}.markdown-preview ol ol ol,.markdown-preview ol ul ol,.markdown-preview ul ol ol,.markdown-preview ul ul ol{list-style-type:lower-alpha}.markdown-preview .newpage,.markdown-preview .pagebreak{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center!important}.markdown-preview:not([data-for=preview]) .code-chunk .code-chunk-btn-group{display:none}.markdown-preview:not([data-for=preview]) .code-chunk .status{display:none}.markdown-preview:not([data-for=preview]) .code-chunk .output-div{margin-bottom:16px}.markdown-preview .md-toc{padding:0}.markdown-preview .md-toc .md-toc-link-wrapper .md-toc-link{display:inline;padding:.25rem 0}.markdown-preview .md-toc .md-toc-link-wrapper .md-toc-link div,.markdown-preview .md-toc .md-toc-link-wrapper .md-toc-link p{display:inline}.markdown-preview .md-toc .md-toc-link-wrapper.highlighted .md-toc-link{font-weight:800}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,.66);border:4px solid rgba(150,150,150,.66);background-clip:content-box}html body[for=html-export]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for=html-export]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0;min-height:100vh}@media screen and (min-width:914px){html body[for=html-export]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px + 2em)}}@media screen and (max-width:914px){html body[for=html-export]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for=html-export]:not([data-presentation-mode]) .markdown-preview{font-size:14px!important;padding:1em}}@media print{html body[for=html-export]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for=html-export]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,.66);border:4px solid rgba(150,150,150,.66);background-clip:content-box}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc .md-toc{padding:0 16px}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc .md-toc .md-toc-link-wrapper .md-toc-link{display:inline;padding:.25rem 0}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc .md-toc .md-toc-link-wrapper .md-toc-link div,html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc .md-toc .md-toc-link-wrapper .md-toc-link p{display:inline}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc .md-toc .md-toc-link-wrapper.highlighted .md-toc-link{font-weight:800}html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% - 300px);padding:2em calc(50% - 457px - 300px / 2);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for=html-export]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for=html-export]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for=html-export]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}
/* Please visit the URL below for more information: */
/*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */

      </style>
      <!-- The content below will be included at the end of the <head> element. --><script type="text/javascript">
  document.addEventListener("DOMContentLoaded", function () {
    // your code here
  });
</script></head><body for="html-export">
    
    
      <div class="crossnote markdown-preview  ">
      
<p>Everything in this document is work well in Ubuntu 23.04 (my local desktop) and Ubuntu 22.04 (my server run in AWS).</p>
<p>The live demo version: <a href="https://yentraquan.shop/">https://yentraquan.shop/</a></p>
<h3 id="i-install-make-and-docker">I. Install Make and Docker </h3>
<ul>
<li>
<ol>
<li>Install make (for run Makefile with predefined commands)</li>
</ol>
<ul>
<li>Linux</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    sudo apt install make
</code></pre><ul>
<li>Mac OS</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    brew install make
</code></pre></li>
<li>
<p>Window</p>
<ul>
<li>Install Chocolatey first (if it's not already installed)</li>
</ul>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
</code></pre><ul>
<li>Install Make</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    choco install make
</code></pre></li>
<li>
<ol start="2">
<li>Install Docker<br>
Download at: <a href="https://www.docker.com/">https://www.docker.com/</a></li>
</ol>
</li>
</ul>
<h3 id="ii-run-with-docker-compose">II. Run with Docker Compose </h3>
<p><b style="color:purple">You have the option to run without Docker below.</b></p>
<h4 id="step-1-setup-the-user-acceptance-testing-environment">Step 1: Setup the User Acceptance Testing Environment </h4>
<ul>
<li>
<p>While you have the option to use other environments, for convenient testing, it is recommended to use this environment. It <a style="color:red" href="">requires only a single command</a> to bring everything up.</p>
</li>
<li>
<p>This environment is designed for running user acceptance testing. The hosts for Postgres and MongoDB are specified by the container's name (not the IP address). The configuration file is located at <a style="color:red" href="">env/uat.env</a>.</p>
</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code><span class="token constant">APP_PORT</span><span class="token operator">=</span><span class="token number">8080</span>

<span class="token constant">MG_DB_HOST</span><span class="token operator">=</span>mongo<span class="token operator">-</span>db
<span class="token constant">MG_DB_PORT</span><span class="token operator">=</span><span class="token number">27017</span>
<span class="token constant">MG_DB_NAME</span><span class="token operator">=</span>tealicious_db
<span class="token constant">MG_DB_USER</span><span class="token operator">=</span>tealicious_shop
<span class="token constant">MG_DB_PASSWORD</span><span class="token operator">=</span>tealicious_shop

<span class="token constant">PG_DB_HOST</span><span class="token operator">=</span>postgres
<span class="token constant">PG_DB_PORT</span><span class="token operator">=</span><span class="token string">"5432"</span>
<span class="token constant">PG_DB_NAME</span><span class="token operator">=</span><span class="token string">"tealicious_db"</span>
<span class="token constant">PG_DB_USER</span><span class="token operator">=</span><span class="token string">"postgres"</span>
<span class="token constant">PG_DB_PASSWORD</span><span class="token operator">=</span><span class="token string">"0000"</span>
<span class="token constant">PG_DATABASE_URL</span><span class="token operator">=</span><span class="token string">"postgresql://${PG_DB_USER}:${PG_DB_PASSWORD}@${PG_DB_HOST}:${PG_DB_PORT}/${PG_DB_NAME}?schema=public"</span>


<span class="token constant">API_URL</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>yentraquan<span class="token punctuation">.</span><span class="token property-access">shop</span>

<span class="token constant">VNP_TMN_CODE</span><span class="token operator">=</span>
<span class="token constant">VNP_HASH_SECRET</span><span class="token operator">=</span>
<span class="token constant">VNP_URL</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>sandbox<span class="token punctuation">.</span><span class="token property-access">vnpayment</span><span class="token punctuation">.</span><span class="token property-access">vn</span><span class="token operator">/</span>paymentv2<span class="token operator">/</span>vpcpay<span class="token punctuation">.</span><span class="token property-access">html</span>
<span class="token constant">VNP_API</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>sandbox<span class="token punctuation">.</span><span class="token property-access">vnpayment</span><span class="token punctuation">.</span><span class="token property-access">vn</span><span class="token operator">/</span>merchant_webapi<span class="token operator">/</span>api<span class="token operator">/</span>transaction
<span class="token constant">VNP_RETURN_URL</span><span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>api<span class="token operator">/</span>payment<span class="token operator">/</span>vnpay_return
</code></pre><h4 id="step-2-run-docker-compose-with-one-command">Step 2: Run Docker Compose with one command </h4>
<ul>
<li>Ensure no Docker containers are running on ports <code>8080</code>, <code>80</code>, <code>5432</code> and <code>27017</code>.</li>
<li>Ensure no Docker containers named <code>postgres</code>, <code>mongo-db</code> and <code>tealicious-shop</code> are running.</li>
<li>With just a single command, everything will be ready to use. Note that during the initial run, it may take some time to download all the dependencies and images.</li>
</ul>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    make uat_up
</code></pre><p>I discovered that <a style="color:red" href="">Windows users</a> (only Windows) can pass environment variables through the command line as Linux and MacOS. Therefore, you can execute the following command in <code>PowerShell</code> in case you use <a style="color:red" href="">Windows</a> to run the application:</p>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    $env:MODE='uat'; docker compose -f docker-compose-uat.yml up -d
</code></pre><p>After the application is running, you can access it at: <a style="color:red" href="">http://localhost</a> (run in port 80)</p>
<p>To remove the application and images, run:</p>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    make uat_down
</code></pre><h3 id="iii-run-without-docker-not-suggested">III. Run without Docker (not suggested) </h3>
<h4 id="step-1-install-packages-and-dependencies">Step 1: Install packages and dependencies </h4>
<ul>
<li>
<ol>
<li>Install package</li>
</ol>
</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    npm install
</code></pre><ul>
<li>
<ol start="2">
<li>Install dotenv-cli</li>
</ol>
</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    npm install <span class="token operator">-</span>g dotenv<span class="token operator">-</span>cli
</code></pre><h4 id="step-2-start-database-in-docker-by-using-make">Step 2: Start Database in Docker by using Make </h4>
<p>This command will start Postgres and MongoDB in Docker automatically.</p>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    make init_db
</code></pre><p>If you want to remove it just run</p>
<pre data-role="codeBlock" data-info="" class="language-text text"><code>    make rm_db
</code></pre><h4 id="step-3-step-local-environment-variables">Step 3: Step local environment variables </h4>
<p><strong>Local Environment Configuration:</strong></p>
<p>The <code>local.env</code> file, located in the <code>env</code> folder, has already been created. This file contains all the necessary environment variables required to run the application.</p>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code><span class="token constant">APP_PORT</span><span class="token operator">=</span><span class="token number">8080</span>

<span class="token constant">MG_DB_HOST</span><span class="token operator">=</span>localhost
<span class="token constant">MG_DB_PORT</span><span class="token operator">=</span><span class="token number">27017</span>
<span class="token constant">MG_DB_NAME</span><span class="token operator">=</span>tealicious_db
<span class="token constant">MG_DB_USER</span><span class="token operator">=</span>tealicious_shop
<span class="token constant">MG_DB_PASSWORD</span><span class="token operator">=</span>tealicious_shop

<span class="token constant">PG_DB_HOST</span><span class="token operator">=</span>localhost
<span class="token constant">PG_DB_PORT</span><span class="token operator">=</span><span class="token string">"5432"</span>
<span class="token constant">PG_DB_NAME</span><span class="token operator">=</span><span class="token string">"tealicious_db"</span>
<span class="token constant">PG_DB_USER</span><span class="token operator">=</span><span class="token string">"postgres"</span>
<span class="token constant">PG_DB_PASSWORD</span><span class="token operator">=</span><span class="token string">"0000"</span>
<span class="token constant">PG_DATABASE_URL</span><span class="token operator">=</span><span class="token string">"postgresql://${PG_DB_USER}:${PG_DB_PASSWORD}@${PG_DB_HOST}:${PG_DB_PORT}/${PG_DB_NAME}?schema=public"</span>

<span class="token constant">API_URL</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>yentraquan<span class="token punctuation">.</span><span class="token property-access">shop</span>

<span class="token constant">VNP_TMN_CODE</span><span class="token operator">=</span>
<span class="token constant">VNP_HASH_SECRET</span><span class="token operator">=</span>
<span class="token constant">VNP_URL</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>sandbox<span class="token punctuation">.</span><span class="token property-access">vnpayment</span><span class="token punctuation">.</span><span class="token property-access">vn</span><span class="token operator">/</span>paymentv2<span class="token operator">/</span>vpcpay<span class="token punctuation">.</span><span class="token property-access">html</span>
<span class="token constant">VNP_API</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>sandbox<span class="token punctuation">.</span><span class="token property-access">vnpayment</span><span class="token punctuation">.</span><span class="token property-access">vn</span><span class="token operator">/</span>merchant_webapi<span class="token operator">/</span>api<span class="token operator">/</span>transaction
<span class="token constant">VNP_RETURN_URL</span><span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>api<span class="token operator">/</span>payment<span class="token operator">/</span>vnpay_return
</code></pre><p><strong><b style="color:red">I also have a file named <code>prod.env</code> containing the same structure, but it is connected to my server informaton, so I have already removed it already.</b></strong></p>
<h4 id="step-4-migrating-and-seeding-database">Step 4: Migrating and Seeding Database </h4>
<p>When the database is ready, run the following command to migrate the database:</p>
<ul>
<li>
<ol>
<li>Migrate the database</li>
</ol>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    make db_migrate env<span class="token operator">=</span>local
</code></pre><p>You can run it with <code>env=prod</code> or <code>env=uat</code> if you want to migrate the production or user acceptance testing database.</p>
</li>
<li>
<ol start="2">
<li>Seed the database</li>
</ol>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    make db_seed env<span class="token operator">=</span>local
</code></pre></li>
</ul>
<h4 id="step-5-build-and-run-the-application">Step 5: Build and Run the Application </h4>
<ul>
<li>
<ol>
<li>Build the application</li>
</ol>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    npm run build
</code></pre></li>
<li>
<ol start="2">
<li>Run the application:</li>
</ol>
<ul>
<li>2.1. Run in production mode</li>
</ul>
<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    make start env<span class="token operator">=</span>local
</code></pre><ul>
<li>2.2. Run in debug mode (you dont need to build at step 5.1)<pre data-role="codeBlock" data-info="js" class="language-javascript js"><code>    make run env<span class="token operator">=</span>local
</code></pre></li>
</ul>
</li>
</ul>
<p>You can run it with <code>env=prod</code> or <code>env=uat</code> if you want to run the production or user acceptance testing application.</p>
<p>After the application is running, you can access it at: <a style="color:red" href="">http://localhost:8080</a> (run in port 8080)</p>

      </div>
      
      
    
    
    
    
    
    
  
    </body></html>